output {

  if "exceed_rate_limit" in [tags] {
      stdout {
             codec => line {format => "DROP from Exceed rate limit: %{[@cf][app]} %{[@timestamp]} %{[@message]}"}
      }
      statsd {
        host => "${STATSD_HOST}"
        port => "${STATSD_PORT}"
        protocol => "udp"
        namespace => "${DEPLOYMENT_NAME}"
        sender => "%{[@cf][api]}"
        gauge => { "throttled.%{[@cf][org]}.%{[@cf][space]}.%{[@cf][app]}.exceed_limit" => "+1" }
     }

  }  else if "throttled_same_message" in [tags] {
      stdout { codec => line { format => "DROP from same message: %{[@cf][app]} %{[@timestamp]} %{[@message]}" } }
      statsd {
        host => "${STATSD_HOST}"
        port => "${STATSD_PORT}"
        protocol => "udp"
        namespace => "${DEPLOYMENT_NAME}"
        sender => "%{[@cf][api]}"
        gauge => {  "throttled.%{[@cf][org]}.%{[@cf][space]}.%{[@cf][app]}.same_message" => "+1" }
      }
  }  else {
      stdout { codec => line { format => "%{[@cf][app]} %{[@timestamp]} %{[@message]}" } } 
      statsd {
      host => "${STATSD_HOST}"
      port => "${STATSD_PORT}"
      protocol => "udp"
      namespace => "${DEPLOYMENT_NAME}"
      sender => "%{[@cf][api]}"
      gauge => { "throttled.%{[@cf][org]}.%{[@cf][space]}.%{[@cf][app]}.not_throttled" => "+1" }
      } 
    }

}



